[package]
name = "ruffyos"
version = "0.1.0"
edition = "2021"
authors = ["Kshitij Aucharmal <kshitijaucharmal21@gmail.com>"]

# the profile used for `cargo build`
[profile.dev]
# panic = "abort" # disable stack unwinding on panic

# the profile used for `cargo build --release`
[profile.release]
panic = "abort" # disable stack unwinding on panic

# TODO: Make my own BootLoader, and link it with the kernel to create bootable
# Use for reference
# https://github.com/rust-osdev/bootimage
# This tool compiles the kernel and bootloader first, and then links them together to create a bootable disk image
[dependencies]
# Will not work on its own
bootloader = "0.9"
# So that the volatile memory operations are not optimized away
volatile = "0.2.6"
# Spinning Mutex: To add safe interior mutability (Basically make static writer mutable)
spin = "0.5.2"
# Way to Exit QEMU from the guest System
x86_64 = "0.14.2"
# Using Serial Port with uart_16550 to send data from machine to console ( for debuggin )
uart_16550 = "0.2.0"

# Use lazy static library 
# static variables/structs are executed at compile time
[dependencies.lazy_static]
version = "1.0"
features = ["spin_no_std"]

# Only for QEMU
# This is only for exiting from QEMU, for normal exiting, we would need to
# implement:
# TODO: APM or ACPI Support
[package.metadata.bootimage]
test-args = ["-device", "isa-debug-exit,iobase=0xf4,iosize=0x04"]
# Setting up success code as 33 to let cargo test know
test-success-exit-code = 33         # (0x10 << 1) | 1
